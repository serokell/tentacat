[
  {
    "request": {
      "body": "\"\\\"\\\"\"",
      "headers": {
        "User-agent": "tentacat",
        "Authorization": "token yourtokencomeshere"
      },
      "method": "get",
      "options": [],
      "request_body": "",
      "url": "https://api.github.com/repos/elixir-lang/elixir/issues/3970/comments?since=2015-11-16T23%3A59%3A59Z"
    },
    "response": {
      "body": "[{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/comments/157567508\",\"html_url\":\"https://github.com/elixir-lang/elixir/issues/3970#issuecomment-157567508\",\"issue_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/3970\",\"id\":157567508,\"user\":{\"login\":\"josevalim\",\"id\":9582,\"avatar_url\":\"https://avatars.githubusercontent.com/u/9582?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/josevalim\",\"html_url\":\"https://github.com/josevalim\",\"followers_url\":\"https://api.github.com/users/josevalim/followers\",\"following_url\":\"https://api.github.com/users/josevalim/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/josevalim/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/josevalim/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/josevalim/subscriptions\",\"organizations_url\":\"https://api.github.com/users/josevalim/orgs\",\"repos_url\":\"https://api.github.com/users/josevalim/repos\",\"events_url\":\"https://api.github.com/users/josevalim/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/josevalim/received_events\",\"type\":\"User\",\"site_admin\":false},\"created_at\":\"2015-11-18T01:26:26Z\",\"updated_at\":\"2015-11-18T01:26:26Z\",\"body\":\"Thank you. I am not sure because, although this feature could be useful, it also looks incomplete from the documentation perspective (we don't show the return value!) or may hide a bug (someone actually forgot to write the next line).\"},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/comments/157675454\",\"html_url\":\"https://github.com/elixir-lang/elixir/issues/3970#issuecomment-157675454\",\"issue_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/3970\",\"id\":157675454,\"user\":{\"login\":\"lexmag\",\"id\":248290,\"avatar_url\":\"https://avatars.githubusercontent.com/u/248290?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/lexmag\",\"html_url\":\"https://github.com/lexmag\",\"followers_url\":\"https://api.github.com/users/lexmag/followers\",\"following_url\":\"https://api.github.com/users/lexmag/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/lexmag/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/lexmag/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/lexmag/subscriptions\",\"organizations_url\":\"https://api.github.com/users/lexmag/orgs\",\"repos_url\":\"https://api.github.com/users/lexmag/repos\",\"events_url\":\"https://api.github.com/users/lexmag/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/lexmag/received_events\",\"type\":\"User\",\"site_admin\":false},\"created_at\":\"2015-11-18T10:41:28Z\",\"updated_at\":\"2015-11-18T10:41:28Z\",\"body\":\"> someone actually forgot to write the next line\\r\\n\\r\\nI've seen that happened, not once.\"},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/comments/157739636\",\"html_url\":\"https://github.com/elixir-lang/elixir/issues/3970#issuecomment-157739636\",\"issue_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/3970\",\"id\":157739636,\"user\":{\"login\":\"michalmuskala\",\"id\":477062,\"avatar_url\":\"https://avatars.githubusercontent.com/u/477062?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/michalmuskala\",\"html_url\":\"https://github.com/michalmuskala\",\"followers_url\":\"https://api.github.com/users/michalmuskala/followers\",\"following_url\":\"https://api.github.com/users/michalmuskala/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/michalmuskala/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/michalmuskala/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/michalmuskala/subscriptions\",\"organizations_url\":\"https://api.github.com/users/michalmuskala/orgs\",\"repos_url\":\"https://api.github.com/users/michalmuskala/repos\",\"events_url\":\"https://api.github.com/users/michalmuskala/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/michalmuskala/received_events\",\"type\":\"User\",\"site_admin\":false},\"created_at\":\"2015-11-18T14:57:10Z\",\"updated_at\":\"2015-11-18T14:57:10Z\",\"body\":\"And also: if there will be no assertion - why do you want to use a doctest?\\r\\nI presume it's for testing that the code won't crash - but does it have such a big value for documentation? We need to have in mind that doctests are primarily a form of documentation, only later they are a form of tests (at least that's how I view them).\"},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/comments/157804171\",\"html_url\":\"https://github.com/elixir-lang/elixir/issues/3970#issuecomment-157804171\",\"issue_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/3970\",\"id\":157804171,\"user\":{\"login\":\"pdilyard\",\"id\":1459456,\"avatar_url\":\"https://avatars.githubusercontent.com/u/1459456?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/pdilyard\",\"html_url\":\"https://github.com/pdilyard\",\"followers_url\":\"https://api.github.com/users/pdilyard/followers\",\"following_url\":\"https://api.github.com/users/pdilyard/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/pdilyard/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/pdilyard/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/pdilyard/subscriptions\",\"organizations_url\":\"https://api.github.com/users/pdilyard/orgs\",\"repos_url\":\"https://api.github.com/users/pdilyard/repos\",\"events_url\":\"https://api.github.com/users/pdilyard/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/pdilyard/received_events\",\"type\":\"User\",\"site_admin\":false},\"created_at\":\"2015-11-18T18:04:27Z\",\"updated_at\":\"2015-11-18T18:04:27Z\",\"body\":\"The intention would be to show the usage of a function like this, that might return a \\\"random\\\" value (such as a PID). One idea I had is something like this:\\r\\n```elixir\\r\\n@doc \\\"\\\"\\\"\\r\\niex> SomeServer.start_link\\r\\n{:ok, _pid}\\r\\n\\\"\\\"\\\"\\r\\n```\\r\\nThis pattern matching technique could also be applied to stuff like this:\\r\\n```elixir\\r\\n@doc \\\"\\\"\\\"\\r\\niex> RandomWords.get_word\\r\\n_word\\r\\n\\\"\\\"\\\"\\r\\n```\\r\\n\\r\\nMaybe this isn't the best solution, but it would be nice to be able to show usage examples even when you can't assert the value you get in response.\\r\\n\\r\\nOf course, you could ignore certain functions in your doctest statement, like so:\\r\\n```elixir\\r\\ndoctest RandomWords, except: [get_word: 0]\\r\\n```\\r\\nBut this creates potential for problems like you guys mentioned above. Someone could very easily change the usage of the function, but forget to reenable the doctest on that particular function.\"},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/comments/157810410\",\"html_url\":\"https://github.com/elixir-lang/elixir/issues/3970#issuecomment-157810410\",\"issue_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/3970\",\"id\":157810410,\"user\":{\"login\":\"alco\",\"id\":207748,\"avatar_url\":\"https://avatars.githubusercontent.com/u/207748?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/alco\",\"html_url\":\"https://github.com/alco\",\"followers_url\":\"https://api.github.com/users/alco/followers\",\"following_url\":\"https://api.github.com/users/alco/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/alco/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/alco/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/alco/subscriptions\",\"organizations_url\":\"https://api.github.com/users/alco/orgs\",\"repos_url\":\"https://api.github.com/users/alco/repos\",\"events_url\":\"https://api.github.com/users/alco/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/alco/received_events\",\"type\":\"User\",\"site_admin\":false},\"created_at\":\"2015-11-18T18:23:43Z\",\"updated_at\":\"2015-11-18T18:23:43Z\",\"body\":\"> Maybe this isn't the best solution, but it would be nice to be able to show usage examples even when you can't assert the value you get in response.\\r\\n\\r\\nYou can skip the `iex>` prefix to exclude an example from doctests.\"},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/comments/157820831\",\"html_url\":\"https://github.com/elixir-lang/elixir/issues/3970#issuecomment-157820831\",\"issue_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/3970\",\"id\":157820831,\"user\":{\"login\":\"pdilyard\",\"id\":1459456,\"avatar_url\":\"https://avatars.githubusercontent.com/u/1459456?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/pdilyard\",\"html_url\":\"https://github.com/pdilyard\",\"followers_url\":\"https://api.github.com/users/pdilyard/followers\",\"following_url\":\"https://api.github.com/users/pdilyard/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/pdilyard/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/pdilyard/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/pdilyard/subscriptions\",\"organizations_url\":\"https://api.github.com/users/pdilyard/orgs\",\"repos_url\":\"https://api.github.com/users/pdilyard/repos\",\"events_url\":\"https://api.github.com/users/pdilyard/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/pdilyard/received_events\",\"type\":\"User\",\"site_admin\":false},\"created_at\":\"2015-11-18T18:54:55Z\",\"updated_at\":\"2015-11-18T18:54:55Z\",\"body\":\"@alco that's a good point. I guess it's just my OCD that wants to be completely consistent :smile: \"},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/comments/158373808\",\"html_url\":\"https://github.com/elixir-lang/elixir/issues/3970#issuecomment-158373808\",\"issue_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/3970\",\"id\":158373808,\"user\":{\"login\":\"josevalim\",\"id\":9582,\"avatar_url\":\"https://avatars.githubusercontent.com/u/9582?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/josevalim\",\"html_url\":\"https://github.com/josevalim\",\"followers_url\":\"https://api.github.com/users/josevalim/followers\",\"following_url\":\"https://api.github.com/users/josevalim/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/josevalim/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/josevalim/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/josevalim/subscriptions\",\"organizations_url\":\"https://api.github.com/users/josevalim/orgs\",\"repos_url\":\"https://api.github.com/users/josevalim/repos\",\"events_url\":\"https://api.github.com/users/josevalim/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/josevalim/received_events\",\"type\":\"User\",\"site_admin\":false},\"created_at\":\"2015-11-20T11:50:49Z\",\"updated_at\":\"2015-11-20T11:50:49Z\",\"body\":\"Ok, I am closing this as we agree it shouldn't be fixed, thanks @pdilyard!\"},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/comments/158508379\",\"html_url\":\"https://github.com/elixir-lang/elixir/issues/3970#issuecomment-158508379\",\"issue_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/3970\",\"id\":158508379,\"user\":{\"login\":\"pdilyard\",\"id\":1459456,\"avatar_url\":\"https://avatars.githubusercontent.com/u/1459456?v=3\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/pdilyard\",\"html_url\":\"https://github.com/pdilyard\",\"followers_url\":\"https://api.github.com/users/pdilyard/followers\",\"following_url\":\"https://api.github.com/users/pdilyard/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/pdilyard/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/pdilyard/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/pdilyard/subscriptions\",\"organizations_url\":\"https://api.github.com/users/pdilyard/orgs\",\"repos_url\":\"https://api.github.com/users/pdilyard/repos\",\"events_url\":\"https://api.github.com/users/pdilyard/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/pdilyard/received_events\",\"type\":\"User\",\"site_admin\":false},\"created_at\":\"2015-11-20T19:54:00Z\",\"updated_at\":\"2015-11-20T19:54:00Z\",\"body\":\"Thanks for the quick feedback!\"}]",
      "headers": {
        "Server": "GitHub.com",
        "Date": "Sat, 25 Jun 2016 03:44:33 GMT",
        "Content-Type": "application/json; charset=utf-8",
        "Content-Length": "11766",
        "Status": "200 OK",
        "X-RateLimit-Limit": "5000",
        "X-RateLimit-Remaining": "4398",
        "X-RateLimit-Reset": "1466829396",
        "Cache-Control": "private, max-age=60, s-maxage=60",
        "Vary": "Accept, Authorization, Cookie, X-GitHub-OTP",
        "ETag": "\"aa15443cf199fd070bec1fb8f7ef065f\"",
        "X-OAuth-Scopes": "gist, notifications, read:org, repo, user",
        "X-Accepted-OAuth-Scopes": "repo",
        "X-GitHub-Media-Type": "github.v3; format=json",
        "Access-Control-Expose-Headers": "ETag, Link, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval",
        "Access-Control-Allow-Origin": "*",
        "Content-Security-Policy": "default-src 'none'",
        "Strict-Transport-Security": "max-age=31536000; includeSubdomains; preload",
        "X-Content-Type-Options": "nosniff",
        "X-Frame-Options": "deny",
        "X-XSS-Protection": "1; mode=block",
        "X-Served-By": "065b43cd9674091fec48a221b420fbb3",
        "X-GitHub-Request-Id": "AD4F7429:27FE:206803:576DFE21"
      },
      "status_code": 200,
      "type": "ok"
    }
  }
]
